#!/bin/sh
export TEXTDOMAIN=salix_installer
. gettext.sh
TMP=/var/log/setup/tmp
if [ ! -d $TMP ]; then
  mkdir -p $TMP
fi
if [ -f $TMP/Punattended ]; then
 eval $(grep "^SMB_SERVER=" $TMP/Punattended)
 eval $(grep "^SMB_ROOT=" $TMP/Punattended)
fi

if [ "$REMOTE_SHARE" = "" ]; then REMOTE_SHARE=${SMB_SERVER}; fi
if [ "$REMOTE_PATH" = "" ]; then REMOTE_PATH=${SMB_ROOT}; fi

# Load the cifs module:
modprobe cifs 2>/dev/null

while [ 0 ]; do
 rm -f $TMP/SeTDS $TMP/SeTmount
 UPNRUN=`cat $TMP/SeTupnrun`
 echo "" > $TMP/tempmsg
 gettext "Good! We're all set on the local end, but now we need to know \
where to find the software packages to install. First, we need \
the share address of the Samba server where the Salix sources \
are stored." >> $TMP/tempmsg
 echo "" >> $TMP/tempmsg
 gettext "Example share address:" >> $TMP/tempmsg
 echo " //192.168.0.1/public" >> $TMP/tempmsg
 if [ "$UPNRUN" = "0" ]; then
echo >> $TMP/tempmsg
gettext "Since you're already running on the network, you should be able \
to use the hostname instead of an IP address if you wish.
" >> $TMP/tempmsg
 fi
 echo "" >> $TMP/tempmsg
 gettext "What is the share address of your Samba server?" >> $TMP/tempmsg
 dialog --title "`gettext "ENTER SHARE ADDRESS OF SAMBA SERVER"`" --inputbox \
 "`cat $TMP/tempmsg`" 0 0 $REMOTE_SHARE 2> $TMP/remote
 if [ ! $? = 0 ]; then
  rm -f $TMP/tempmsg $TMP/remote
  exit
 fi
 REMOTE_SHARE="`cat $TMP/remote`"
 rm $TMP/remote
 echo "" > $TMP/tempmsg
 gettext "There must be a directory on the server with the Salix \
packages and files arranged in a tree like the FTP site." \
   >> $TMP/tempmsg
 gettext "The installation script needs to know the name of the \
directory below your Samba share that contains the series \
subdirectories. For example, if your A series is found at \
/stuff/salix/a, then you would respond: /stuff/salix" \
   >> $TMP/tempmsg
 gettext "What is the Salix source directory?" >> $TMP/tempmsg
 dialog --title "`gettext "SELECT SOURCE DIRECTORY"`" --inputbox "`cat $TMP/tempmsg`" \
 0 0 $REMOTE_PATH 2> $TMP/slacksrc
 if [ ! $? = 0 ]; then
  rm -f $TMP/tempmsg $TMP/slacksrc
  exit
 fi
 REMOTE_PATH="`cat $TMP/slacksrc`"
 rm $TMP/slacksrc

 gettext "You should see no mount errors:" > $TMP/mntout
 echo >> $TMP/mntout
 eval_gettext "Mounting \$REMOTE_SHARE ..." >> $TMP/mntout
 echo >> $TMP/mntout
 mount -t cifs -o ro,guest,sec=none $REMOTE_SHARE /var/log/mount \
  >> $TMP/mntout 2>&1
 RET=$?
 if [ $RET != 0 ]; then
  gettext "Mount failed." >> $TMP/mntout
  echo >> $TMP/mntout
  umount -f -t cifs /var/log/mount 1>/dev/null 2>&1
  DEFANSW="yes"
 else
  gettext "Mounted Samba share(s):" >> $TMP/mntout
  echo >> $TMP/mntout
  mount -t cifs >> $TMP/mntout 2>/dev/null

  if [ -f /var/log/mount/$REMOTE_PATH/a/tagfile \
       -o -f /var/log/mount/$REMOTE_PATH/salix/a/tagfile ];
  then
   gettext "A Salix package tree was found! Ready to continue." >> $TMP/mntout
   echo >> $TMP/mntout
   DEFANSW="no"
  else
   gettext "No Salix package tree found at the indicated path!" >> $TMP/mntout
   echo >> $TMP/mntout
   DEFANSW="yes"
  fi
 fi
 echo >> $TMP/mntout
 gettext "Do you want to try setting up Samba again?" >> $TMP/mntout
 echo >> $TMP/mntout
 echo >> $TMP/mntout
 if [ "$DEFANSW" = "no" ]; then
  dialog --title "`gettext "MOUNT RESULT"`" \
   --defaultno --yesno "`cat $TMP/mntout`" 17 80
  RET=$?
 else
  dialog --title "`gettext "MOUNT RESULT"`" \
   --yesno "`cat $TMP/mntout`" 12 80
  RET=$?
 fi
 if [ $RET = 1 ]; then
  rm -f $TMP/mntout
  break
 fi
 rm -f $TMP/mntout 
 #if [ "$UPNRUN" = "1" ]; then
 # route del $LOCAL_NETWORK
 # ifconfig $ENET_DEVICE down 
 #fi
done

if [ -f /var/log/mount/$REMOTE_PATH/a/tagfile ]; then
 echo "/var/log/mount/$REMOTE_PATH" > $TMP/SeTDS 
else
 echo "/var/log/mount/${REMOTE_PATH}/salix" > $TMP/SeTDS 
fi
echo "-source_mounted" > $TMP/SeTmount
echo "/dev/null" > $TMP/SeTsource
